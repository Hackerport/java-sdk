/*
 * @(#)InheritableThreadLocal.java	1.23 10/03/23
 *
 * Копирайт (c) 2006, Oracle и/или его филиалы. Все права защищены.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Использовать в соответствии с лицензией.
 */

package java.lang;
import java.lang.ref.*;

/**
 * Этот класс расширяет <tt>ThreadLocal</tt> для обеспечения наследуемости 
 * значений от родительского потока дочерним потокам: когда создается 
 * дочерний поток, он получает начальные значения для всех наследуемых 
 * локальных для потока переменных, для которых родитель имеет значения. 
 * Обычно дочерние значения будут идентичны родительским; однако, дочерние 
 * значения могут быть сделаны любой функцией родителя переопределением 
 * метода <tt>childValue</tt> в этом классе.
 * 
 * <p>Наследуемые локальные для потока переменные используются вместо
 * обычных локальных для потока переменных, когда атрибут для каждого потока, 
 * поддерживаемый в переменной (например, User ID, Transaction ID) должен
 * автоматически передаваться любым создаваемым дочерним потокам.
 *
 * @author  Josh Bloch and Doug Lea
 * @version 1.23, 03/23/10
 * @see     ThreadLocal
 * @since   1.2
 */

public class InheritableThreadLocal<T> extends ThreadLocal<T> {
    /**
     * Вычисляет дочернее начальное значение для этой наследуемой локальной
     * для потока переменой, как функци от родительского значения во время 
     * создания дочернего потока. Этот метод вызывается из родительского 
     * потока до того, как дочерний будет запущен.
     * <p>
     * Этот метод просто возвращает свой входной аргумент и должен быть
     * переопределен, если желательно другое поведение.
     *
     * @param parentValue значение родительского потока.
     * @return начальное значение дочернего потока.
     */
    protected T childValue(T parentValue) {
        return parentValue;
    }

    /**
     * Получает карту, ассоциированную с <code>ThreadLocal</code>. 
     *
     * @param t текущий поток
     */
    ThreadLocalMap getMap(Thread t) {
       return t.inheritableThreadLocals;
    }

    /**
     * Создает карту, ассоциированную с <code>ThreadLocal</code>. 
     *
     * @param t текущий поток
     * @param firstValue значение для начальной записи таблицы.
     * @param map карта для хранения.
     */
    void createMap(Thread t, T firstValue) {
        t.inheritableThreadLocals = new ThreadLocalMap(this, firstValue);
    }
}
