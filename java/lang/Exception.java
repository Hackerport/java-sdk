/*
 * @(#)Exception.java	1.33 10/03/23
 *
 * Копирайт (c) 2006, Oracle и/или его филиалы. Все права защищены.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Использовать в соответствии с лицензией.
 */

package java.lang;

/**
 * Класс <code>Exception</code> и его подклассы являются формой 
 * <code>Throwable</code>, которые сообщают об условиях, которые разумное
 * приложение хотело бы перехватить.
 *
 * @author  Frank Yellin
 * @version 1.33, 03/23/10
 * @see     java.lang.Error
 * @since   JDK1.0
 */
public class Exception extends Throwable {
    static final long serialVersionUID = -3387516993124229948L;

    /**
     * Конструирует новое исключение с <code>null</code>, как его уточняющим сообщением.
     * Причина не инициализируется и может впоследствии быть инициализирована
     * вызовом {@link #initCause}.
     */
    public Exception() {
        super();
    }

    /**
     * Конструирует новое исключение с указанным уточняющим сообщением. 
     * Причина не инициализируется и может впоследствии быть инициализирована
     * вызовом {@link #initCause}.
     *
     * @param   message   уточняющее собщение. Уточняющее сообщение сохраняется
     *          для последующего получения методом {@link Throwable#getMessage()}).
     */
    public Exception(String message) {
        super(message);
    }

    /**
     * Конструирует новое исключение с указанным уточняющим собщением и 
     * причиной.  <p>Заметьте, что уточняющее сообщение, ассоциированное 
     * с <code>cause</code>, автоматически <i>не</i> включается в уточняющее
     *  сообщение этого исключения.
     *
     * @param  message уточняющее сообщение (которое сохраняется для последующего 
     *         получения методом {@link Throwable#getMessage()}).
     * @param  cause причина (которая сохраняется для последующего получения
     *         методом {@link Throwable#getCause()}). (Значение <tt>null</tt>
     *         допускается и сообщает, что причина несуществует или 
     *         неизвестна.)
     * @since  1.4
     */
    public Exception(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * Конструирует новое исключение с указанной причиной и уточняющим 
     * сообщением <tt>(cause==null ? null : cause.toString())</tt>
     * (которое обычно содержит класс и уточняющее сообщение причины 
     * (<tt>cause</tt>)). Этот конструктор полезен для исключений, которые 
     * являются несколько большим, чем обертками над другими кидаемыми объектами. 
     * (например, {@link java.security.PrivilegedActionException}).
     *
     * @param  cause причина(которая сохраняется для последующего получения
     *         методом {@link #getCause()}). (Значение <tt>null</tt> допустимо,
     *         и указывает, что причина не существует или неизвестна.)
     *
     * @since  1.4
     */
    public Exception(Throwable cause) {
        super(cause);
    }
}
